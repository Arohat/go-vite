// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/account_block_net.proto

package vitepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountBlockNet struct {
	Meta                 *AccountBlockMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	PublicKey            []byte            `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	To                   []byte            `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	PrevHash             []byte            `protobuf:"bytes,4,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	FromHash             []byte            `protobuf:"bytes,5,opt,name=fromHash,proto3" json:"fromHash,omitempty"`
	Hash                 []byte            `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	TokenId              []byte            `protobuf:"bytes,7,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               []byte            `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Balance              []byte            `protobuf:"bytes,9,opt,name=balance,proto3" json:"balance,omitempty"`
	Data                 string            `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	SnapshotTimestamp    []byte            `protobuf:"bytes,11,opt,name=snapshotTimestamp,proto3" json:"snapshotTimestamp,omitempty"`
	Timestamp            uint64            `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            []byte            `protobuf:"bytes,13,opt,name=signature,proto3" json:"signature,omitempty"`
	Nounce               []byte            `protobuf:"bytes,14,opt,name=nounce,proto3" json:"nounce,omitempty"`
	Difficulty           []byte            `protobuf:"bytes,15,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	FAmount              []byte            `protobuf:"bytes,16,opt,name=fAmount,proto3" json:"fAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AccountBlockNet) Reset()         { *m = AccountBlockNet{} }
func (m *AccountBlockNet) String() string { return proto.CompactTextString(m) }
func (*AccountBlockNet) ProtoMessage()    {}
func (*AccountBlockNet) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_block_net_7e807595e20206b9, []int{0}
}
func (m *AccountBlockNet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBlockNet.Unmarshal(m, b)
}
func (m *AccountBlockNet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBlockNet.Marshal(b, m, deterministic)
}
func (dst *AccountBlockNet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBlockNet.Merge(dst, src)
}
func (m *AccountBlockNet) XXX_Size() int {
	return xxx_messageInfo_AccountBlockNet.Size(m)
}
func (m *AccountBlockNet) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBlockNet.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBlockNet proto.InternalMessageInfo

func (m *AccountBlockNet) GetMeta() *AccountBlockMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AccountBlockNet) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *AccountBlockNet) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *AccountBlockNet) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *AccountBlockNet) GetFromHash() []byte {
	if m != nil {
		return m.FromHash
	}
	return nil
}

func (m *AccountBlockNet) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *AccountBlockNet) GetTokenId() []byte {
	if m != nil {
		return m.TokenId
	}
	return nil
}

func (m *AccountBlockNet) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *AccountBlockNet) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *AccountBlockNet) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *AccountBlockNet) GetSnapshotTimestamp() []byte {
	if m != nil {
		return m.SnapshotTimestamp
	}
	return nil
}

func (m *AccountBlockNet) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AccountBlockNet) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *AccountBlockNet) GetNounce() []byte {
	if m != nil {
		return m.Nounce
	}
	return nil
}

func (m *AccountBlockNet) GetDifficulty() []byte {
	if m != nil {
		return m.Difficulty
	}
	return nil
}

func (m *AccountBlockNet) GetFAmount() []byte {
	if m != nil {
		return m.FAmount
	}
	return nil
}

type AccountBlockListNet struct {
	Blocks               []*AccountBlockNet `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AccountBlockListNet) Reset()         { *m = AccountBlockListNet{} }
func (m *AccountBlockListNet) String() string { return proto.CompactTextString(m) }
func (*AccountBlockListNet) ProtoMessage()    {}
func (*AccountBlockListNet) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_block_net_7e807595e20206b9, []int{1}
}
func (m *AccountBlockListNet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBlockListNet.Unmarshal(m, b)
}
func (m *AccountBlockListNet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBlockListNet.Marshal(b, m, deterministic)
}
func (dst *AccountBlockListNet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBlockListNet.Merge(dst, src)
}
func (m *AccountBlockListNet) XXX_Size() int {
	return xxx_messageInfo_AccountBlockListNet.Size(m)
}
func (m *AccountBlockListNet) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBlockListNet.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBlockListNet proto.InternalMessageInfo

func (m *AccountBlockListNet) GetBlocks() []*AccountBlockNet {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountBlockNet)(nil), "vitepb.AccountBlockNet")
	proto.RegisterType((*AccountBlockListNet)(nil), "vitepb.AccountBlockListNet")
}

func init() {
	proto.RegisterFile("proto/account_block_net.proto", fileDescriptor_account_block_net_7e807595e20206b9)
}

var fileDescriptor_account_block_net_7e807595e20206b9 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xdf, 0x6a, 0xea, 0x40,
	0x10, 0xc6, 0x89, 0xe6, 0x44, 0x1d, 0x3d, 0x7a, 0xce, 0x16, 0xda, 0x45, 0x6c, 0x09, 0x5e, 0xe5,
	0x42, 0x14, 0xec, 0x13, 0xd8, 0x8b, 0xd2, 0xd2, 0xd6, 0x8b, 0xd0, 0x7b, 0xd9, 0x24, 0x9b, 0x1a,
	0x4c, 0xb2, 0x21, 0x99, 0x08, 0x3e, 0x68, 0xdf, 0xa7, 0xec, 0x6c, 0xfc, 0x03, 0xf5, 0x6e, 0xbf,
	0xdf, 0xf7, 0xcd, 0x32, 0xb3, 0xb3, 0x70, 0x5f, 0x94, 0x0a, 0xd5, 0x42, 0x84, 0xa1, 0xaa, 0x73,
	0xdc, 0x04, 0xa9, 0x0a, 0x77, 0x9b, 0x5c, 0xe2, 0x9c, 0x38, 0x73, 0xf6, 0x09, 0xca, 0x22, 0x18,
	0x4f, 0xae, 0xc5, 0xa2, 0xc0, 0xa4, 0xa6, 0xdf, 0x6d, 0x18, 0xad, 0x8c, 0xf5, 0xa4, 0x9d, 0xb5,
	0x44, 0x36, 0x03, 0x3b, 0x93, 0x28, 0xb8, 0xe5, 0x5a, 0x5e, 0x7f, 0xc9, 0xe7, 0xe6, 0xa2, 0xf9,
	0x65, 0xec, 0x43, 0xa2, 0xf0, 0x29, 0xc5, 0x26, 0xd0, 0x2b, 0xea, 0x20, 0x4d, 0xc2, 0x37, 0x79,
	0xe0, 0x2d, 0xd7, 0xf2, 0x06, 0xfe, 0x19, 0xb0, 0x21, 0xb4, 0x50, 0xf1, 0x36, 0xe1, 0x16, 0x2a,
	0x36, 0x86, 0x6e, 0x51, 0xca, 0xfd, 0x8b, 0xa8, 0xb6, 0xdc, 0x26, 0x7a, 0xd2, 0xda, 0x8b, 0x4b,
	0x95, 0x91, 0xf7, 0xc7, 0x78, 0x47, 0xcd, 0x18, 0xd8, 0x5b, 0xcd, 0x1d, 0xe2, 0x74, 0x66, 0x1c,
	0x3a, 0xa8, 0x76, 0x32, 0x7f, 0x8d, 0x78, 0x87, 0xf0, 0x51, 0xb2, 0x5b, 0x70, 0x44, 0xa6, 0x9b,
	0xe5, 0x5d, 0x32, 0x1a, 0xa5, 0x2b, 0x02, 0x91, 0x8a, 0x3c, 0x94, 0xbc, 0x67, 0x2a, 0x1a, 0xa9,
	0xef, 0x8f, 0x04, 0x0a, 0x0e, 0xae, 0xe5, 0xf5, 0x7c, 0x3a, 0xb3, 0x19, 0xfc, 0xaf, 0x72, 0x51,
	0x54, 0x5b, 0x85, 0x9f, 0x49, 0x26, 0x2b, 0x14, 0x59, 0xc1, 0xfb, 0x54, 0xf7, 0xdb, 0xd0, 0xef,
	0x80, 0xa7, 0xd4, 0xc0, 0xb5, 0x3c, 0xdb, 0x3f, 0x03, 0xed, 0x56, 0xc9, 0x57, 0x2e, 0xb0, 0x2e,
	0x25, 0xff, 0x6b, 0x5e, 0xe9, 0x04, 0x74, 0xbf, 0xb9, 0xaa, 0x75, 0x5b, 0x43, 0xd3, 0xaf, 0x51,
	0xec, 0x01, 0x20, 0x4a, 0xe2, 0x38, 0x09, 0xeb, 0x14, 0x0f, 0x7c, 0x44, 0xde, 0x05, 0xd1, 0xf3,
	0xc4, 0x2b, 0x33, 0xe8, 0x3f, 0x33, 0x4f, 0x23, 0xa7, 0xcf, 0x70, 0x73, 0xb9, 0xaf, 0xf7, 0xa4,
	0x42, 0xbd, 0xda, 0x05, 0x38, 0xf4, 0x01, 0x2a, 0x6e, 0xb9, 0x6d, 0xaf, 0xbf, 0xbc, 0xbb, 0xb6,
	0xdc, 0xb5, 0x44, 0xbf, 0x89, 0x05, 0x0e, 0x7d, 0x93, 0xc7, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xe1, 0xf7, 0x14, 0x72, 0x6d, 0x02, 0x00, 0x00,
}
