package chain

import (
	"encoding/json"
	"fmt"
	"github.com/vitelabs/go-vite/config"
	"os"
	"os/user"
	"path"
	"path/filepath"
	"runtime"
	"testing"
)

var genesisConfigJson = "{\"GenesisAccountAddress\": \"vite_ab24ef68b84e642c0ddca06beec81c9acb1977bbd7da27a87a\",\"ForkPoints\": {},\"ContractStorageMap\":{\"vite_00000000000000000000000000000000000000042d7ef71894\": {\"0100000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005649544520544f4b454e000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000260000000000000000000000000ab24ef68b84e642c0ddca06beec81c9acb1977bb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"0100000000000000000002\": \"000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000005649544520544f4b454e000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000260000000000000000000000000ab24ef68b84e642c0ddca06beec81c9acb1977bb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"41ba695ff63caafd5460dcf914387e95ca3a900f00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027339000000000000000000000000000000000000000000000000000000000000\",\"383fedcbd5e3f52196a4e8a1392ed3ddc4d4360e00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027336000000000000000000000000000000000000000000000000000000000000\",\"1630f8c0cf5eda3ce64bd49a0523b826f67b19a300000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027335000000000000000000000000000000000000000000000000000000000000\",\"14edbc9214bd1e5f6082438f707d10bf43463a6d00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027331000000000000000000000000000000000000000000000000000000000000\",\"5a1b5ece654138d035bdd9873c1892fb5817548a00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000037331310000000000000000000000000000000000000000000000000000000000\",\"545c8e4c74e7bb6911165e34cbfb83bc513bde3600000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000037331300000000000000000000000000000000000000000000000000000000000\",\"27a258dd1ed0ce0de3f4abd019adacd1b4b163b800000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027333000000000000000000000000000000000000000000000000000000000000\",\"31a02e4f4b536e2d6d9bde23910cdffe72d3369e00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027337000000000000000000000000000000000000000000000000000000000000\",\"0acbb1335822c8df4488f3eea6e9000eabb0f19d00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027332000000000000000000000000000000000000000000000000000000000000\",\"70cfd586185e552635d11f398232344f97fc524f00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027338000000000000000000000000000000000000000000000000000000000000\",\"1b1dfa00323aea69465366d839703547fec5359d00000000000000000001\": \"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000027334000000000000000000000000000000000000000000000000000000000000\",\"000000000000000000013150cb35860d60796c33a33eee0402ad8988cf4697c3\": \"00000000000000000000000000000000000000000000000000000000000001000000000000000000000000001630f8c0cf5eda3ce64bd49a0523b826f67b19a30000000000000000000000001630f8c0cf5eda3ce64bd49a0523b826f67b19a300000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a7000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002733500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001630f8c0cf5eda3ce64bd49a0523b826f67b19a3\",\"000000000000000000015c55b8a2d2e027935faf04d076851512abad04cac5d4\": \"000000000000000000000000000000000000000000000000000000000000010000000000000000000000000070cfd586185e552635d11f398232344f97fc524f00000000000000000000000070cfd586185e552635d11f398232344f97fc524f00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a70000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000027338000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000070cfd586185e552635d11f398232344f97fc524f\",\"000000000000000000010d44538430c1ef7b90633121507bdd295a032eabc094\": \"000000000000000000000000000000000000000000000000000000000000010000000000000000000000000031a02e4f4b536e2d6d9bde23910cdffe72d3369e00000000000000000000000031a02e4f4b536e2d6d9bde23910cdffe72d3369e00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a70000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000027337000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000031a02e4f4b536e2d6d9bde23910cdffe72d3369e\",\"0000000000000000000164f33f0ac22b10e0a5b824b56f669da64b8bfaa7e525\": \"000000000000000000000000000000000000000000000000000000000000010000000000000000000000000014edbc9214bd1e5f6082438f707d10bf43463a6d00000000000000000000000014edbc9214bd1e5f6082438f707d10bf43463a6d00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a70000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000027331000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000014edbc9214bd1e5f6082438f707d10bf43463a6d\",\"000000000000000000011eb34f2705e7bb187a4d3a0445ac010f45a5154aceb6\": \"000000000000000000000000000000000000000000000000000000000000010000000000000000000000000027a258dd1ed0ce0de3f4abd019adacd1b4b163b800000000000000000000000027a258dd1ed0ce0de3f4abd019adacd1b4b163b800000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a70000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000027333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000027a258dd1ed0ce0de3f4abd019adacd1b4b163b8\",\"00000000000000000001ef89623bff8e9f718645f2762ad1e197764786658b04\": \"0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000383fedcbd5e3f52196a4e8a1392ed3ddc4d4360e000000000000000000000000383fedcbd5e3f52196a4e8a1392ed3ddc4d4360e00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000273360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000383fedcbd5e3f52196a4e8a1392ed3ddc4d4360e\",\"000000000000000000019dd3418ed8545cea91c99b133cedad824bbed0f8b7bc\": \"00000000000000000000000000000000000000000000000000000000000001000000000000000000000000005a1b5ece654138d035bdd9873c1892fb5817548a0000000000000000000000005a1b5ece654138d035bdd9873c1892fb5817548a00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a7000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000003733131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000005a1b5ece654138d035bdd9873c1892fb5817548a\",\"00000000000000000001d22c8cc6c7228d9c059ad021cb822257c1021fd98d12\": \"0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000545c8e4c74e7bb6911165e34cbfb83bc513bde36000000000000000000000000545c8e4c74e7bb6911165e34cbfb83bc513bde3600000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000373313000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000545c8e4c74e7bb6911165e34cbfb83bc513bde36\",\"0000000000000000000155c39540770a94a49854a7594814eda9acbc1108ebed\": \"000000000000000000000000000000000000000000000000000000000000010000000000000000000000000041ba695ff63caafd5460dcf914387e95ca3a900f00000000000000000000000041ba695ff63caafd5460dcf914387e95ca3a900f00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a70000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000027339000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000041ba695ff63caafd5460dcf914387e95ca3a900f\",\"0000000000000000000135ee1773b268ec621a6f743964f35e093d1d4c15de9c\": \"00000000000000000000000000000000000000000000000000000000000001000000000000000000000000001b1dfa00323aea69465366d839703547fec5359d0000000000000000000000001b1dfa00323aea69465366d839703547fec5359d00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a7000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002733400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001b1dfa00323aea69465366d839703547fec5359d\",\"00000000000000000001d1dac7a530058b0f3c06841fe1bb3c4de5513a3ed90f\": \"00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000acbb1335822c8df4488f3eea6e9000eabb0f19d0000000000000000000000000acbb1335822c8df4488f3eea6e9000eabb0f19d00000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000000000000076a7000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002733200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000acbb1335822c8df4488f3eea6e9000eabb0f19d\"},\"vite_00000000000000000000000000000000000000056ad6d26692\": {\"5649544520544f4b454e\": \"000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000033b2e3c9fd0803ce80000000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab24ef68b84e642c0ddca06beec81c9acb1977bb0000000000000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a5669746520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045649544500000000000000000000000000000000000000000000000000000000\"}},\"ContractLogsMap\": {\"vite_00000000000000000000000000000000000000056ad6d26692\": [{\"Data\": \"\",\"Topics\":[\"3f9dcc00d5e929040142c3fb2b67a3be1b0e91e98dac18d5bc2b7817a4cfecb6\",\"000000000000000000000000000000000000000000005649544520544f4b454e\"]}]},\"AccountBalanceMap\": {\"vite_ab24ef68b84e642c0ddca06beec81c9acb1977bbd7da27a87a\": {\"tti_5649544520544f4b454e6e40\":900000000000000000000000000},\"vite_56fd05b23ff26cd7b0a40957fb77bde60c9fd6ebc35f809c23\": {\"tti_5649544520544f4b454e6e40\":100000000000000000000000000}}}\""

func NewChainInstance(dirName string, clear bool) (*chain, error) {
	dataDir := path.Join(defaultDataDir(), dirName)
	if clear {
		os.RemoveAll(dataDir)
	}
	genesisConfig := &config.Genesis{}
	json.Unmarshal([]byte(genesisConfigJson), genesisConfig)

	chainInstance := NewChain(dataDir, &config.Chain{}, genesisConfig)

	if err := chainInstance.Init(); err != nil {
		return nil, err
	}
	chainInstance.Start()
	return chainInstance, nil
}

func defaultDataDir() string {
	// Try to place the data folder in the user's home dir
	home := homeDir()
	if home != "" {
		if runtime.GOOS == "darwin" {
			return filepath.Join(home, "Library", "GVite")
		} else if runtime.GOOS == "windows" {
			return filepath.Join(home, "AppData", "Roaming", "GVite")
		} else {
			return filepath.Join(home, ".gvite")
		}
	}
	// As we cannot guess chain stable location, return empty and handle later
	return ""
}

func homeDir() string {
	if home := os.Getenv("HOME"); home != "" {
		return home
	}
	if usr, err := user.Current(); err == nil {
		return usr.HomeDir
	}
	return ""
}

func TestChain(t *testing.T) {
	const accountNum = 1000
	chainInstance, err := NewChainInstance("unit_test", false)
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println("InsertAccountBlock")

	accounts, hashList, addrList, heightList, snapshotBlockList := InsertAccountBlock(t, accountNum, chainInstance, 10000, 198)

	accountIdList := make([]uint64, len(addrList))
	maxAccountId := uint64(0)
	for index, addr := range addrList {
		accountId, err := chainInstance.GetAccountId(addr)
		if err != nil {
			t.Fatal(err)
		}
		if accountId <= 0 {
			t.Fatal("accountId <= 0")
		} else if accountId > maxAccountId {
			maxAccountId = accountId
		}

		accountIdList[index] = accountId
	}
	//if maxAccountId > accountNum {
	//	t.Fatal("error!")
	//}

	fmt.Println("Complete InsertAccountBlock")

	t.Run("GetAccountBlockByHash", func(t *testing.T) {
		GetAccountBlockByHash(t, chainInstance, hashList)
	})

	t.Run("GetAccountBlockByHeight", func(t *testing.T) {
		GetAccountBlockByHeight(t, chainInstance, addrList, heightList)
	})

	t.Run("IsAccountBlockExisted", func(t *testing.T) {
		IsAccountBlockExisted(t, chainInstance, hashList)
	})

	t.Run("GetAccountId", func(t *testing.T) {
		GetAccountId(t, chainInstance, addrList, accountIdList)
	})

	t.Run("GetAccountAddress", func(t *testing.T) {
		GetAccountAddress(t, chainInstance, addrList, accountIdList)
	})

	t.Run("IsReceived", func(t *testing.T) {
		IsReceived(t, chainInstance, accounts, hashList)
	})

	t.Run("GetReceiveAbBySendAb", func(t *testing.T) {
		GetReceiveAbBySendAb(t, chainInstance, accounts, hashList)
	})

	t.Run("GetConfirmedTimes", func(t *testing.T) {
		GetConfirmedTimes(t, chainInstance, accounts, hashList)
	})

	t.Run("GetLatestAccountBlock", func(t *testing.T) {
		GetLatestAccountBlock(t, chainInstance, accounts, addrList)
	})

	t.Run("GetLatestAccountHeight", func(t *testing.T) {
		GetLatestAccountHeight(t, chainInstance, accounts, addrList)
	})

	t.Run("HasOnRoadBlocks", func(t *testing.T) {
		HasOnRoadBlocks(t, chainInstance, accounts, addrList)
	})

	t.Run("GetOnRoadBlocksHashList", func(t *testing.T) {
		GetOnRoadBlocksHashList(t, chainInstance, accounts, addrList)
	})

	t.Run("IsSnapshotBlockExisted", func(t *testing.T) {
		IsSnapshotBlockExisted(t, chainInstance, snapshotBlockList)
	})
	t.Run("GetGenesisSnapshotBlock", func(t *testing.T) {
		GetGenesisSnapshotBlock(t, chainInstance)
	})
	t.Run("GetLatestSnapshotBlock", func(t *testing.T) {
		GetLatestSnapshotBlock(t, chainInstance)
	})
	t.Run("GetSnapshotHeightByHash", func(t *testing.T) {
		GetSnapshotHeightByHash(t, chainInstance, snapshotBlockList)
	})
	t.Run("GetSnapshotHeaderByHeight", func(t *testing.T) {
		GetSnapshotHeaderByHeight(t, chainInstance, snapshotBlockList)
	})

	t.Run("GetSnapshotBlockByHeight", func(t *testing.T) {
		GetSnapshotBlockByHeight(t, chainInstance, snapshotBlockList)
	})

	t.Run("GetSnapshotHeaderByHash", func(t *testing.T) {
		GetSnapshotHeaderByHash(t, chainInstance, snapshotBlockList)
	})

	t.Run("GetSnapshotBlockByHash", func(t *testing.T) {
		GetSnapshotBlockByHash(t, chainInstance, snapshotBlockList)
	})

	t.Run("GetRangeSnapshotHeaders", func(t *testing.T) {
		GetRangeSnapshotHeaders(t, chainInstance, snapshotBlockList)
	})

	t.Run("GetRangeSnapshotBlocks", func(t *testing.T) {
		GetRangeSnapshotBlocks(t, chainInstance, snapshotBlockList)
	})

	t.Run("GetBalance", func(t *testing.T) {
		GetBalance(t, chainInstance, accounts)
	})

	t.Run("GetBalanceMap", func(t *testing.T) {
		GetBalanceMap(t, chainInstance, accounts)
	})

	chainInstance.Stop()
	chainInstance.Destroy()
	//t.Run("GetAccountBlocks", func(t *testing.T) {
	//	GetAccountBlocks(t, chainInstance, accounts, addrList)
	//})
	//
	//t.Run("GetAccountBlocksByHeight", func(t *testing.T) {
	//	GetAccountBlocksByHeight(t, chainInstance, accounts, addrList)
	//})
}
