// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dex_order.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	TradeAsset           uint32   `protobuf:"varint,3,opt,name=TradeAsset,proto3" json:"TradeAsset,omitempty"`
	QuoteAsset           uint32   `protobuf:"varint,4,opt,name=QuoteAsset,proto3" json:"QuoteAsset,omitempty"`
	Side                 bool     `protobuf:"varint,5,opt,name=Side,proto3" json:"Side,omitempty"`
	Type                 uint32   `protobuf:"varint,6,opt,name=Type,proto3" json:"Type,omitempty"`
	Price                float64  `protobuf:"fixed64,7,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             uint64   `protobuf:"varint,8,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	LockQuantity         uint64   `protobuf:"varint,9,opt,name=LockQuantity,proto3" json:"LockQuantity,omitempty"`
	Status               uint32   `protobuf:"varint,10,opt,name=Status,proto3" json:"Status,omitempty"`
	Timestamp            uint64   `protobuf:"varint,11,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	ExecutedQuantity     uint64   `protobuf:"varint,12,opt,name=ExecutedQuantity,proto3" json:"ExecutedQuantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df90bf1b4327f51, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Order) GetTradeAsset() uint32 {
	if m != nil {
		return m.TradeAsset
	}
	return 0
}

func (m *Order) GetQuoteAsset() uint32 {
	if m != nil {
		return m.QuoteAsset
	}
	return 0
}

func (m *Order) GetSide() bool {
	if m != nil {
		return m.Side
	}
	return false
}

func (m *Order) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Order) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Order) GetLockQuantity() uint64 {
	if m != nil {
		return m.LockQuantity
	}
	return 0
}

func (m *Order) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Order) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Order) GetExecutedQuantity() uint64 {
	if m != nil {
		return m.ExecutedQuantity
	}
	return 0
}

type OrderNode struct {
	OrderId              uint64   `protobuf:"varint,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	Order                *Order   `protobuf:"bytes,2,opt,name=Order,proto3" json:"Order,omitempty"`
	ForwardOnLevel       []uint64 `protobuf:"varint,3,rep,packed,name=ForwardOnLevel,proto3" json:"ForwardOnLevel,omitempty"`
	BackwardOnLevel      []uint64 `protobuf:"varint,4,rep,packed,name=backwardOnLevel,proto3" json:"backwardOnLevel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderNode) Reset()         { *m = OrderNode{} }
func (m *OrderNode) String() string { return proto.CompactTextString(m) }
func (*OrderNode) ProtoMessage()    {}
func (*OrderNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df90bf1b4327f51, []int{1}
}

func (m *OrderNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderNode.Unmarshal(m, b)
}
func (m *OrderNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderNode.Marshal(b, m, deterministic)
}
func (m *OrderNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderNode.Merge(m, src)
}
func (m *OrderNode) XXX_Size() int {
	return xxx_messageInfo_OrderNode.Size(m)
}
func (m *OrderNode) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderNode.DiscardUnknown(m)
}

var xxx_messageInfo_OrderNode proto.InternalMessageInfo

func (m *OrderNode) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderNode) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderNode) GetForwardOnLevel() []uint64 {
	if m != nil {
		return m.ForwardOnLevel
	}
	return nil
}

func (m *OrderNode) GetBackwardOnLevel() []uint64 {
	if m != nil {
		return m.BackwardOnLevel
	}
	return nil
}

type OrderListMeta struct {
	Header               uint64   `protobuf:"varint,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tail                 uint64   `protobuf:"varint,2,opt,name=Tail,proto3" json:"Tail,omitempty"`
	Length               uint32   `protobuf:"varint,3,opt,name=Length,proto3" json:"Length,omitempty"`
	Level                uint32   `protobuf:"varint,4,opt,name=Level,proto3" json:"Level,omitempty"`
	ForwardOnLevel       []uint64 `protobuf:"varint,5,rep,packed,name=ForwardOnLevel,proto3" json:"ForwardOnLevel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderListMeta) Reset()         { *m = OrderListMeta{} }
func (m *OrderListMeta) String() string { return proto.CompactTextString(m) }
func (*OrderListMeta) ProtoMessage()    {}
func (*OrderListMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df90bf1b4327f51, []int{2}
}

func (m *OrderListMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderListMeta.Unmarshal(m, b)
}
func (m *OrderListMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderListMeta.Marshal(b, m, deterministic)
}
func (m *OrderListMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderListMeta.Merge(m, src)
}
func (m *OrderListMeta) XXX_Size() int {
	return xxx_messageInfo_OrderListMeta.Size(m)
}
func (m *OrderListMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderListMeta.DiscardUnknown(m)
}

var xxx_messageInfo_OrderListMeta proto.InternalMessageInfo

func (m *OrderListMeta) GetHeader() uint64 {
	if m != nil {
		return m.Header
	}
	return 0
}

func (m *OrderListMeta) GetTail() uint64 {
	if m != nil {
		return m.Tail
	}
	return 0
}

func (m *OrderListMeta) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *OrderListMeta) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *OrderListMeta) GetForwardOnLevel() []uint64 {
	if m != nil {
		return m.ForwardOnLevel
	}
	return nil
}

func init() {
	proto.RegisterType((*Order)(nil), "proto.Order")
	proto.RegisterType((*OrderNode)(nil), "proto.OrderNode")
	proto.RegisterType((*OrderListMeta)(nil), "proto.OrderListMeta")
}

func init() { proto.RegisterFile("dex_order.proto", fileDescriptor_5df90bf1b4327f51) }

var fileDescriptor_5df90bf1b4327f51 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4d, 0xee, 0xd3, 0x30,
	0x10, 0xc5, 0xe5, 0x34, 0x69, 0x9b, 0xe9, 0x17, 0xb2, 0x10, 0xb2, 0x10, 0x42, 0x51, 0x16, 0x28,
	0x62, 0xd1, 0x05, 0x9c, 0xa0, 0x0b, 0x10, 0x95, 0x02, 0xa5, 0x6e, 0xf7, 0xc8, 0x8d, 0x47, 0x10,
	0xf5, 0x23, 0x95, 0xe3, 0x40, 0x7b, 0x0c, 0xd6, 0x9c, 0x8a, 0x1b, 0x21, 0x4f, 0xd2, 0xb4, 0xf4,
	0xdf, 0x55, 0xe6, 0xfd, 0x66, 0x62, 0x3f, 0xbf, 0x81, 0x89, 0xc6, 0xd3, 0xb7, 0xc2, 0x68, 0x34,
	0xd3, 0xa3, 0x29, 0x6c, 0xc1, 0x03, 0xfa, 0xc4, 0x7f, 0x3d, 0x08, 0x16, 0x0e, 0xf3, 0x31, 0x78,
	0x73, 0x2d, 0x58, 0xc4, 0x12, 0x5f, 0x7a, 0x73, 0xcd, 0x05, 0xf4, 0x66, 0x5a, 0x1b, 0x2c, 0x4b,
	0xe1, 0x45, 0x2c, 0x09, 0xe5, 0x45, 0xf2, 0xd7, 0x00, 0x6b, 0xa3, 0x34, 0xce, 0xca, 0x12, 0xad,
	0xe8, 0x44, 0x2c, 0x19, 0xc9, 0x1b, 0xe2, 0xfa, 0xcb, 0xaa, 0xb0, 0x4d, 0xdf, 0xaf, 0xfb, 0x57,
	0xc2, 0x39, 0xf8, 0xab, 0x5c, 0xa3, 0x08, 0x22, 0x96, 0xf4, 0x25, 0xd5, 0x8e, 0xad, 0xcf, 0x47,
	0x14, 0x5d, 0x9a, 0xa6, 0x9a, 0x3f, 0x87, 0xe0, 0xab, 0xc9, 0x33, 0x14, 0xbd, 0x88, 0x25, 0x4c,
	0xd6, 0x82, 0xbf, 0x84, 0xfe, 0xb2, 0x52, 0x07, 0x9b, 0xdb, 0xb3, 0xe8, 0x93, 0xdb, 0x56, 0xf3,
	0x18, 0x86, 0x69, 0x91, 0x6d, 0xdb, 0x7e, 0x48, 0xfd, 0xff, 0x18, 0x7f, 0x01, 0xdd, 0x95, 0x55,
	0xb6, 0x2a, 0x05, 0xd0, 0x5d, 0x8d, 0xe2, 0xaf, 0x20, 0x5c, 0xe7, 0x7b, 0x2c, 0xad, 0xda, 0x1f,
	0xc5, 0x80, 0x7e, 0xbc, 0x02, 0xfe, 0x16, 0x9e, 0x7d, 0x38, 0x61, 0x56, 0x59, 0xd4, 0xed, 0xe9,
	0x43, 0x1a, 0x7a, 0xc2, 0xe3, 0x3f, 0x0c, 0x42, 0xca, 0xf4, 0x4b, 0xa1, 0xd1, 0xe5, 0x48, 0xa2,
	0x0d, 0xf7, 0x22, 0x79, 0xdc, 0x44, 0x4f, 0xf9, 0x0e, 0xde, 0x0d, 0xeb, 0xcd, 0x4c, 0x89, 0xc9,
	0x66, 0x2b, 0x6f, 0x60, 0xfc, 0xb1, 0x30, 0xbf, 0x94, 0xd1, 0x8b, 0x43, 0x8a, 0x3f, 0x71, 0x27,
	0x3a, 0x51, 0x27, 0xf1, 0xe5, 0x1d, 0xe5, 0x09, 0x4c, 0x36, 0x2a, 0xdb, 0xde, 0x0e, 0xfa, 0x34,
	0x78, 0x8f, 0xe3, 0xdf, 0x0c, 0x46, 0x74, 0x76, 0x9a, 0x97, 0xf6, 0x33, 0x5a, 0xe5, 0x12, 0xf9,
	0x84, 0xca, 0x19, 0xa9, 0x0d, 0x36, 0x8a, 0x76, 0xa2, 0xf2, 0x1d, 0xd9, 0xf3, 0x25, 0xd5, 0x6e,
	0x36, 0xc5, 0xc3, 0x77, 0xfb, 0xa3, 0xd9, 0x7b, 0xa3, 0xdc, 0xae, 0x2e, 0xb7, 0x3a, 0x5c, 0x8b,
	0x07, 0xee, 0x83, 0x47, 0xee, 0x37, 0x5d, 0x7a, 0xf9, 0xfb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x59, 0x3e, 0xd1, 0xf8, 0xa6, 0x02, 0x00, 0x00,
}
