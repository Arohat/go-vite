// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// tcp message
type Disc struct {
	Reason               uint32   `protobuf:"varint,1,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Disc) Reset()         { *m = Disc{} }
func (m *Disc) String() string { return proto.CompactTextString(m) }
func (*Disc) ProtoMessage()    {}
func (*Disc) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_74037835d4b98f87, []int{0}
}
func (m *Disc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Disc.Unmarshal(m, b)
}
func (m *Disc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Disc.Marshal(b, m, deterministic)
}
func (dst *Disc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Disc.Merge(dst, src)
}
func (m *Disc) XXX_Size() int {
	return xxx_messageInfo_Disc.Size(m)
}
func (m *Disc) XXX_DiscardUnknown() {
	xxx_messageInfo_Disc.DiscardUnknown(m)
}

var xxx_messageInfo_Disc proto.InternalMessageInfo

func (m *Disc) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

type Handshake struct {
	NetID                uint32   `protobuf:"varint,1,opt,name=NetID,proto3" json:"NetID,omitempty"`
	ID                   []byte   `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
	Version              uint32   `protobuf:"varint,4,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Handshake) Reset()         { *m = Handshake{} }
func (m *Handshake) String() string { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()    {}
func (*Handshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_74037835d4b98f87, []int{1}
}
func (m *Handshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Handshake.Unmarshal(m, b)
}
func (m *Handshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Handshake.Marshal(b, m, deterministic)
}
func (dst *Handshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Handshake.Merge(dst, src)
}
func (m *Handshake) XXX_Size() int {
	return xxx_messageInfo_Handshake.Size(m)
}
func (m *Handshake) XXX_DiscardUnknown() {
	xxx_messageInfo_Handshake.DiscardUnknown(m)
}

var xxx_messageInfo_Handshake proto.InternalMessageInfo

func (m *Handshake) GetNetID() uint32 {
	if m != nil {
		return m.NetID
	}
	return 0
}

func (m *Handshake) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *Handshake) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*Disc)(nil), "protos.Disc")
	proto.RegisterType((*Handshake)(nil), "protos.Handshake")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_74037835d4b98f87) }

var fileDescriptor_message_74037835d4b98f87 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0x72,
	0x5c, 0x2c, 0x2e, 0x99, 0xc5, 0xc9, 0x42, 0x62, 0x5c, 0x6c, 0x45, 0xa9, 0x89, 0xc5, 0xf9, 0x79,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xbc, 0x41, 0x50, 0x9e, 0x92, 0x37, 0x17, 0xa7, 0x47, 0x62, 0x5e,
	0x4a, 0x71, 0x46, 0x62, 0x76, 0xaa, 0x90, 0x08, 0x17, 0xab, 0x5f, 0x6a, 0x89, 0xa7, 0x0b, 0x54,
	0x0d, 0x84, 0x23, 0xc4, 0xc7, 0xc5, 0xe4, 0xe9, 0x22, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x13, 0xc4,
	0xe4, 0xe9, 0x22, 0x24, 0xc1, 0xc5, 0x1e, 0x96, 0x5a, 0x54, 0x9c, 0x99, 0x9f, 0x27, 0xc1, 0x02,
	0x56, 0x07, 0xe3, 0x26, 0x41, 0x2c, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x47, 0x64,
	0x5b, 0x8c, 0x00, 0x00, 0x00,
}
